version: '3.7'
services:
  bookInfoapi:
    build: ./bookInfoAPI/.
    container_name: bookInfoAPI
    ports:
      - "5550:5550"
    environment: 
      BASE_URL : ":5550"
      JAEGER_AGENT_HOST : "jaeger"
      JAEGER_AGENT_PORT : 6831
      JAEGER_SERVICE_NAME: bookInfoAPI
      ConnectionString: "mongodb://{username}:{password}@mongo:27017"
      DatabaseName: bookInfo
      DbUserName: mongoadmin
      DbPassword: secret
    networks:
      - bookInfo-network      
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: bookinfo_jaeger
    ports: 
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    networks:
      - bookInfo-network      
  prometheus:
    build: prometheus/.
    container_name: bookinfo_prometheus
    networks:
      - bookInfo-network    
  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on: 
      - prometheus  
    networks:
      - bookInfo-network      
  mongo:
    image: mongo
    container_name: bookInfo-mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: secret
    volumes: 
      - ./mongodb:/docker-entrypoint-initdb.d/
      - dbdata:/data/db
    networks:
      - bookInfo-network
  mongo-express:
    image: mongo-express
    container_name: bookInfo-mexpress
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongoadmin
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret
    depends_on: 
      - mongo
    networks:
      - bookInfo-network       
networks:
  bookInfo-network:    
volumes:
  dbdata:
  grafana-storage: